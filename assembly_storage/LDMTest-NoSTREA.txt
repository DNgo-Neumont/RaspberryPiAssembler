//Remember, target register is second param in add and str
//ADD[E] IM{1} 4,3 SCODE{0} 001C
//SUB[E] IM{1} 6,6 SCODE{1} 0001
//LDR[E] IM{0} PRI{0} UD{0} BW{0} WRB{0} LDST{0} 2,3 0000
//Branch offsets are 6 hex chars long for 24 bits - no more, no less.
MOVW[E] {0} R{13} 0000 
MOVT[E] {0} R{13} 0000
MOVW[E] {0} R{4} 0000
MOVT[E] {3} R{4} 0F20
ADD[E] IM{1} 4,2 SCODE{0} 0008
LDR[E] IM{0} PRI{0} UD{0} BW{0} WRB{0} LDST{1} 2,3 0000
ORR[E] IM{1} 3,3 SCODE{0} 0008
STR[E] IM{0} PRI{0} UD{0} BW{0} WRB{0} LDST{0} 2,3 0000
ADD[E] IM{1} 4,3 SCODE{0} 001C startLabel
MOVW[E] {0} R{2} 0000
MOVT[E] {0} R{2} 0020
STR[E] IM{0} PRI{0} UD{0} BW{0} WRB{0} LDST{0} 3,2 0000
//To store properly, set your updown bit to 1 - this will properly write the new address on the stack
STM[E] PRI{0} UD{1} BW{0} WRB{1} LDST{0} 13 {R0,R12} 
B[E] L{1} 000000 delayLabel
//Set the preindex bit to 1 so the address gets updated properly. Up/Down subtracts the offset, Pre/post index adds the offset.
//Automatically calculated for LDM/STM commands.
LDM[E] PRI{1} UD{0} BW{0} WRB{1} LDST{1} 13 {R0,R12}
ADD[E] IM{1} 4,3 SCODE{0} 0028
MOVW[E] {0} R{2} 0000
MOVT[E] {0} R{2} 0020
STR[E] IM{0} PRI{0} UD{0} BW{0} WRB{0} LDST{0} 3,2 0000
STM[E] PRI{0} UD{1} BW{0} WRB{1} LDST{0} 13 {R0,R12} 
B[E] L{1} 000000 delayLabel
LDM[E] PRI{1} UD{0} BW{0} WRB{1} LDST{1} 13 {R0,R12}
B[E] L{1} 000000 startLabel
MOVW[E] {4} R{6} 0240 delayLabel
MOVT[E] {0} R{6} 000F
SUB[E] IM{1} 6,6 SCODE{1} 0001
B[5] L{0} FFFFFD
BX[E] E